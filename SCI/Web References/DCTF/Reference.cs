//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SCI.DCTF {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DCTFServiceSoap", Namespace="http://www.irko.com.br")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Resultado))]
    public partial class DCTFService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ImportarArquivoLancamentoLoteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DCTFService() {
            this.Url = global::SCI.Properties.Settings.Default.SCI_DCTF_DCTFService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ImportarArquivoLancamentoLoteCompletedEventHandler ImportarArquivoLancamentoLoteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.irko.com.br/WebService.DCTF.ImportarArquivoLancamentoLote", RequestNamespace="http://www.irko.com.br", ResponseNamespace="http://www.irko.com.br", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultadoImportarArquivoLancamento ImportarArquivoLancamentoLote(string Guid, [System.Xml.Serialization.XmlArrayItemAttribute("LancamentosItem")] string[] Lancamentos, string ANOMES) {
            object[] results = this.Invoke("ImportarArquivoLancamentoLote", new object[] {
                        Guid,
                        Lancamentos,
                        ANOMES});
            return ((ResultadoImportarArquivoLancamento)(results[0]));
        }
        
        /// <remarks/>
        public void ImportarArquivoLancamentoLoteAsync(string Guid, string[] Lancamentos, string ANOMES) {
            this.ImportarArquivoLancamentoLoteAsync(Guid, Lancamentos, ANOMES, null);
        }
        
        /// <remarks/>
        public void ImportarArquivoLancamentoLoteAsync(string Guid, string[] Lancamentos, string ANOMES, object userState) {
            if ((this.ImportarArquivoLancamentoLoteOperationCompleted == null)) {
                this.ImportarArquivoLancamentoLoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportarArquivoLancamentoLoteOperationCompleted);
            }
            this.InvokeAsync("ImportarArquivoLancamentoLote", new object[] {
                        Guid,
                        Lancamentos,
                        ANOMES}, this.ImportarArquivoLancamentoLoteOperationCompleted, userState);
        }
        
        private void OnImportarArquivoLancamentoLoteOperationCompleted(object arg) {
            if ((this.ImportarArquivoLancamentoLoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportarArquivoLancamentoLoteCompleted(this, new ImportarArquivoLancamentoLoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.irko.com.br")]
    public partial class ResultadoImportarArquivoLancamento : Resultado {
        
        private string[] retornoImportarArquivoLancamentoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("RetornoImportarArquivoLancamentoItem")]
        public string[] RetornoImportarArquivoLancamento {
            get {
                return this.retornoImportarArquivoLancamentoField;
            }
            set {
                this.retornoImportarArquivoLancamentoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResultadoImportarArquivoLancamento))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.irko.com.br")]
    public partial class Resultado {
        
        private bool sucessoField;
        
        private bool sucessoFieldSpecified;
        
        private string mensagemField;
        
        private string divisorLinhaField;
        
        private string tagField;
        
        private Stack[] stacksField;
        
        /// <remarks/>
        public bool Sucesso {
            get {
                return this.sucessoField;
            }
            set {
                this.sucessoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SucessoSpecified {
            get {
                return this.sucessoFieldSpecified;
            }
            set {
                this.sucessoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Mensagem {
            get {
                return this.mensagemField;
            }
            set {
                this.mensagemField = value;
            }
        }
        
        /// <remarks/>
        public string DivisorLinha {
            get {
                return this.divisorLinhaField;
            }
            set {
                this.divisorLinhaField = value;
            }
        }
        
        /// <remarks/>
        public string Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        public Stack[] Stacks {
            get {
                return this.stacksField;
            }
            set {
                this.stacksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.irko.com.br")]
    public partial class Stack {
        
        private long levelField;
        
        private bool levelFieldSpecified;
        
        private string placeField;
        
        private string mCodeField;
        
        private string eCodeField;
        
        /// <remarks/>
        public long Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified {
            get {
                return this.levelFieldSpecified;
            }
            set {
                this.levelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Place {
            get {
                return this.placeField;
            }
            set {
                this.placeField = value;
            }
        }
        
        /// <remarks/>
        public string MCode {
            get {
                return this.mCodeField;
            }
            set {
                this.mCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ECode {
            get {
                return this.eCodeField;
            }
            set {
                this.eCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ImportarArquivoLancamentoLoteCompletedEventHandler(object sender, ImportarArquivoLancamentoLoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportarArquivoLancamentoLoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportarArquivoLancamentoLoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultadoImportarArquivoLancamento Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultadoImportarArquivoLancamento)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591